# yaml-language-server: $schema=values.schema.json

nginxGateway:
  # FIXME(lucacome): https://github.com/nginxinc/nginx-gateway-fabric/issues/2490

  # @schema
  # const: deployment
  # @schema
  # -- The kind of the NGINX Gateway Fabric installation - currently, only deployment is supported.
  kind: deployment

  # @schema
  # required: true
  # type: string
  # @schema
  # -- The name of the GatewayClass that will be created as part of this release. Every NGINX Gateway
  # Fabric must have a unique corresponding GatewayClass resource. NGINX Gateway Fabric only processes resources that
  # belong to its class - i.e. have the "gatewayClassName" field resource equal to the class.
  gatewayClassName: nginx

  # -- Set of custom annotations for the NGINX Gateway Fabric pods.
  podAnnotations: {}

  # -- Set of custom annotations for GatewayClass objects.
  gatewayClassAnnotations: {}

  # @schema
  # pattern: ^gateway.nginx.org/.*
  # required: true
  # @schema
  # -- The name of the Gateway controller. The controller name must be of the form: DOMAIN/PATH. The controller's domain
  # is gateway.nginx.org.
  gatewayControllerName: gateway.nginx.org/nginx-gateway-controller

  # The dynamic configuration for the control plane that is contained in the NginxGateway resource.
  config:
    logging:
      # @schema
      # enum:
      #   - info
      #   - debug
      #   - error
      # @schema
      # -- Log level.
      level: info

  # -- Set of custom annotations for NginxGateway objects.
  configAnnotations: {}

  service:
    # -- The annotations of the NGINX Gateway Fabric control plane service.
    annotations: {}

  # -- The number of replicas of the NGINX Gateway Fabric Deployment.
  replicaCount: 1

  # The configuration for leader election.
  leaderElection:
    # -- Enable leader election. Leader election is used to avoid multiple replicas of the NGINX Gateway Fabric
    # reporting the status of the Gateway API resources. If not enabled, all replicas of NGINX Gateway Fabric
    # will update the statuses of the Gateway API resources.
    enable: true

    # -- The name of the leader election lock. A Lease object with this name will be created in the same Namespace as
    # the controller.
    # @default -- Autogenerated if not set or set to "".
    lockName: ""

  ## Defines the settings for the control plane readiness probe. This probe returns Ready when the controller
  ## has started and is ready to configure NGINX.
  readinessProbe:
    # -- Enable the /readyz endpoint on the control plane.
    enable: true

    # @schema
    # type: integer
    # minimum: 1
    # maximum: 65535
    # @schema
    # -- Port in which the readiness endpoint is exposed.
    port: 8081

    # -- The number of seconds after the Pod has started before the readiness probes are initiated.
    initialDelaySeconds: 3

  image:
    # -- The NGINX Gateway Fabric image to use
    repository: ghcr.io/nginxinc/nginx-gateway-fabric
    tag: edge
    # @schema
    # enum:
    #   - Always
    #   - IfNotPresent
    #   - Never
    # @schema
    pullPolicy: Always

  productTelemetry:
    # -- Enable the collection of product telemetry.
    enable: true

  # -- The lifecycle of the nginx-gateway container.
  lifecycle: {}

  # -- The resource requests and/or limits of the nginx-gateway container.
  resources: {}

  # -- extraVolumeMounts are the additional volume mounts for the nginx-gateway container.
  extraVolumeMounts: []

  gwAPIExperimentalFeatures:
    # -- Enable the experimental features of Gateway API which are supported by NGINX Gateway Fabric. Requires the Gateway
    # APIs installed from the experimental channel.
    enable: false

  snippetsFilters:
    # -- Enable SnippetsFilters feature. SnippetsFilters allow inserting NGINX configuration into the generated NGINX
    # config for HTTPRoute and GRPCRoute resources.
    enable: false

nginx:
  image:
    # -- The NGINX image to use.
    repository: ghcr.io/nginxinc/nginx-gateway-fabric/nginx
    tag: edge
    # @schema
    # enum:
    #   - Always
    #   - IfNotPresent
    #   - Never
    # @schema
    pullPolicy: Always

  # -- Is NGINX Plus image being used
  plus: false

  # Configuration for NGINX Plus usage reporting.
  usage:
    # -- The name of the Secret containing the JWT for NGINX Plus usage reporting. Must exist in the same namespace
    # that the NGINX Gateway Fabric control plane is running in (default namespace: nginx-gateway).
    secretName: "nplus-license"

    # -- The endpoint of the NGINX Plus usage reporting server. Default: product.connect.nginx.com
    endpoint: ""

    # -- The nameserver used to resolve the NGINX Plus usage reporting endpoint. Used with NGINX Instance Manager.
    resolver: ""

    # -- Disable client verification of the NGINX Plus usage reporting server certificate.
    skipVerify: false

    # -- The name of the Secret containing the NGINX Instance Manager CA certificate.
    # Must exist in the same namespace that the NGINX Gateway Fabric control plane is running in (default namespace: nginx-gateway).
    caSecretName: ""

    # -- The name of the Secret containing the client certificate and key for authenticating with NGINX Instance Manager.
    # Must exist in the same namespace that the NGINX Gateway Fabric control plane is running in (default namespace: nginx-gateway).
    clientSSLSecretName: ""

  # @schema
  # type: object
  # properties:
  #   disableHTTP2:
  #     description: DisableHTTP2 defines if http2 should be disabled for all servers.
  #     type: boolean
  #   ipFamily:
  #     description: IPFamily specifies the IP family to be used by the NGINX.
  #     type: string
  #     enum:
  #       - ipv4
  #       - ipv6
  #       - dual
  #   rewriteClientIP:
  #     type: object
  #     description: RewriteClientIP defines configuration for rewriting the client IP to the original client's IP.
  #     properties:
  #       mode:
  #         type: string
  #         enum:
  #           - ProxyProtocol
  #           - XForwardedFor
  #       setIPRecursively:
  #         type: boolean
  #       trustedAddresses:
  #         type: array
  #         items:
  #           properties:
  #             type:
  #               type: string
  #               enum:
  #                 - CIDR
  #                 - IPAddress
  #                 - Hostname
  #             value:
  #               type: string
  #   telemetry:
  #     type: object
  #     description: Telemetry specifies the OpenTelemetry configuration.
  #     properties:
  #       exporter:
  #         type: object
  #         properties:
  #           endpoint:
  #             type: string
  #             pattern: ^(?:http?:\/\/)?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?(?:\.[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*(?::\d{1,5})?$
  #           interval:
  #             type: string
  #             pattern: ^\d{1,4}(ms|s)?$
  #           batchSize:
  #             type: integer
  #             minimum: 0
  #           batchCount:
  #             type: integer
  #             minimum: 0
  #       serviceName:
  #         type: string
  #         pattern: ^[a-zA-Z0-9_-]+$
  #       spanAttributes:
  #         type: array
  #         items:
  #           properties:
  #             key:
  #               type: string
  #               pattern: ^([^"$\\]|\\[^$])*$
  #               minLength: 1
  #               maxLength: 255
  #             value:
  #               type: string
  #               pattern: ^([^"$\\]|\\[^$])*$
  #               minLength: 1
  #               maxLength: 255
  #       disabledFeatures:
  #         type: array
  #         items:
  #           type: string
  #           enum:
  #             - DisableTracing
  #   logging:
  #     type: object
  #     description: Logging defines logging related settings for NGINX.
  #     properties:
  #       errorLevel:
  #         type: string
  #         enum:
  #           - debug
  #           - info
  #           - notice
  #           - warn
  #           - error
  #           - crit
  #           - alert
  #           - emerg
  # @schema
  # -- The configuration for the data plane that is contained in the NginxProxy resource.
  config: {}

  # -- Enable debugging for NGINX. Uses the nginx-debug binary. The NGINX error log level should be set to debug in the NginxProxy resource.
  debug: false

  # -- The lifecycle of the nginx container.
  lifecycle: {}

  # -- extraVolumeMounts are the additional volume mounts for the nginx container.
  extraVolumeMounts: []

# -- The termination grace period of the NGINX Gateway Fabric pod.
terminationGracePeriodSeconds: 30

# -- Tolerations for the NGINX Gateway Fabric pod.
tolerations: []

# -- The nodeSelector of the NGINX Gateway Fabric pod.
nodeSelector: {}

# -- The affinity of the NGINX Gateway Fabric pod.
affinity: {}

# -- The topology spread constraints for the NGINX Gateway Fabric pod.
topologySpreadConstraints: []

serviceAccount:
  # -- Set of custom annotations for the NGINX Gateway Fabric service account.
  annotations: {}

  # -- The name of the service account of the NGINX Gateway Fabric pods. Used for RBAC.
  # @default -- Autogenerated if not set or set to ""
  name: ""

  # -- The name of the secret containing docker registry credentials.
  # Secret must exist in the same namespace as the helm release.
  imagePullSecret: ""

  # -- A list of secret names containing docker registry credentials.
  # Secrets must exist in the same namespace as the helm release.
  imagePullSecrets: []

service:
  # -- Creates a service to expose the NGINX Gateway Fabric pods.
  create: true

  # @schema
  # enum:
  #   - ClusterIP
  #   - NodePort
  #   - LoadBalancer
  # @schema
  # -- The type of service to create for the NGINX Gateway Fabric.
  type: LoadBalancer

  # @schema
  # enum:
  #   - Cluster
  #   - Local
  # @schema
  # -- The externalTrafficPolicy of the service. The value Local preserves the client source IP.
  externalTrafficPolicy: Local

  # -- The annotations of the NGINX Gateway Fabric service.
  annotations: {}

  # -- The static IP address for the load balancer. Requires service.type set to LoadBalancer.
  loadBalancerIP: ""

  # -- The IP ranges (CIDR) that are allowed to access the load balancer. Requires service.type set to LoadBalancer.
  loadBalancerSourceRanges: []

  # @schema
  # type: array
  # items:
  #   type: object
  #   properties:
  #     port:
  #       type: integer
  #       minimum: 1
  #       maximum: 65535
  #     targetPort:
  #       type: integer
  #       minimum: 1
  #       maximum: 65535
  #     protocol:
  #       type: string
  #       enum:
  #         - TCP
  #         - UDP
  #     name:
  #       type: string
  # @schema
  # -- A list of ports to expose through the NGINX Gateway Fabric service. Update it to match the listener ports from
  # your Gateway resource. Follows the conventional Kubernetes yaml syntax for service ports.
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
    - port: 443
      targetPort: 443
      protocol: TCP
      name: https

metrics:
  # -- Enable exposing metrics in the Prometheus format.
  enable: true

  # @schema
  # type: integer
  # minimum: 1
  # maximum: 65535
  # @schema
  # -- Set the port where the Prometheus metrics are exposed.
  port: 9113

  # -- Enable serving metrics via https. By default metrics are served via http.
  # Please note that this endpoint will be secured with a self-signed certificate.
  secure: false

# -- extraVolumes for the NGINX Gateway Fabric pod. Use in conjunction with
# nginxGateway.extraVolumeMounts and nginx.extraVolumeMounts to mount additional volumes to the containers.
extraVolumes: []
