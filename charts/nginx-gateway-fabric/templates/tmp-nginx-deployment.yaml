apiVersion: apps/v1
kind: Deployment
metadata:
  name: tmp-nginx-deployment
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: tmp-nginx-deployment
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tmp-nginx-deployment
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        {{- if .Values.metrics.enable }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.metrics.port }}"
        {{- if .Values.metrics.secure }}
        prometheus.io/scheme: "https"
        {{- end }}
        {{- end }}
    spec:
      initContainers:
      - name: init
        image: {{ .Values.nginxGateway.image.repository }}:{{ default .Chart.AppVersion .Values.nginxGateway.image.tag }}
        imagePullPolicy: {{ .Values.nginxGateway.image.pullPolicy }}
        command:
        - /usr/bin/gateway
        - initialize
        - --source
        - /agent/nginx-agent.conf
        - --destination
        - /etc/nginx-agent
        - --source
        - /includes/main.conf
        - --destination
        - /etc/nginx/main-includes
        {{- if .Values.nginx.plus }}
        - --source
        - /includes/mgmt.conf
        - --nginx-plus
        - --destination
        - /etc/nginx/main-includes
        {{- end }}
        env:
          - name: POD_UID
            valueFrom:
              fieldRef:
                fieldPath: metadata.uid
        securityContext:
          seccompProfile:
            type: RuntimeDefault
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsUser: 101
          runAsGroup: 1001
        volumeMounts:
        - name: nginx-agent-config
          mountPath: /agent
        - name: nginx-agent
          mountPath: /etc/nginx-agent
        - name: nginx-includes-bootstrap
          mountPath: /includes
        - name: nginx-main-includes
          mountPath: /etc/nginx/main-includes
      containers:
      - image: {{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
        name: nginx
        {{- if .Values.nginx.lifecycle }}
        lifecycle:
        {{- toYaml .Values.nginx.lifecycle | nindent 10 }}
        {{- end }}
        ports:
        - containerPort: 80
          name: http
        - containerPort: 443
          name: https
        - name: metrics
          containerPort: {{ .Values.metrics.port }}
        securityContext:
          seccompProfile:
            type: RuntimeDefault
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsUser: 101
          runAsGroup: 1001
        volumeMounts:
        - name: nginx-agent
          mountPath: /etc/nginx-agent
        - name: nginx-agent-log
          mountPath: /var/log/nginx-agent
        - name: nginx-conf
          mountPath: /etc/nginx/conf.d
        - name: nginx-stream-conf
          mountPath: /etc/nginx/stream-conf.d
        - name: nginx-main-includes
          mountPath: /etc/nginx/main-includes
        - name: nginx-secrets
          mountPath: /etc/nginx/secrets
        - name: nginx-run
          mountPath: /var/run/nginx
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: nginx-includes
          mountPath: /etc/nginx/includes
        {{- if .Values.nginx.plus }}
        - name: nginx-lib
          mountPath: /var/lib/nginx/state
          {{- if .Values.nginx.usage.secretName }}
        - name: nginx-plus-license
          mountPath: /etc/nginx/license.jwt
          subPath: license.jwt
          {{- end }}
          {{- if or .Values.nginx.usage.caSecretName .Values.nginx.usage.clientSSLSecretName }}
        - name: nginx-plus-usage-certs
          mountPath: /etc/nginx/certs-bootstrap/
          {{- end }}
        {{- end }}
        {{- with .Values.nginx.extraVolumeMounts -}}
        {{ toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.nginx.debug }}
        command:
          - "/bin/sh"
        args:
          - "-c"
          - "rm -rf /var/run/nginx/*.sock && nginx-debug -g 'daemon off;'"
        {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- if .Values.affinity }}
      affinity:
      {{- toYaml .Values.affinity | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nginx-gateway.serviceAccountName" . }}
      securityContext:
        fsGroup: 1001
        runAsNonRoot: true
      {{- if .Values.tolerations }}
      tolerations:
      {{- toYaml .Values.tolerations | nindent 6 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      volumes:
      - name: nginx-agent
        emptyDir: {}
      - name: nginx-agent-config
        configMap:
          name: nginx-agent-config
      - name: nginx-agent-log
        emptyDir: {}
      - name: nginx-conf
        emptyDir: {}
      - name: nginx-stream-conf
        emptyDir: {}
      - name: nginx-main-includes
        emptyDir: {}
      - name: nginx-secrets
        emptyDir: {}
      - name: nginx-run
        emptyDir: {}
      - name: nginx-cache
        emptyDir: {}
      - name: nginx-includes
        emptyDir: {}
      - name: nginx-includes-bootstrap
        configMap:
          name: nginx-includes-bootstrap
      {{- if .Values.nginx.plus }}
      - name: nginx-lib
        emptyDir: {}
        {{- if .Values.nginx.usage.secretName }}
      - name: nginx-plus-license
        secret:
          secretName: {{ .Values.nginx.usage.secretName }}
        {{- end }}
        {{- if or .Values.nginx.usage.caSecretName .Values.nginx.usage.clientSSLSecretName }}
      - name: nginx-plus-usage-certs
        projected:
          sources:
          {{- if .Values.nginx.usage.caSecretName }}
          - secret:
              name: {{ .Values.nginx.usage.caSecretName }}
          {{- end }}
          {{- if .Values.nginx.usage.clientSSLSecretName }}
          - secret:
              name: {{ .Values.nginx.usage.clientSSLSecretName }}
          {{- end }}
        {{- end }}
      {{- end }}
      {{- with .Values.extraVolumes -}}
      {{ toYaml . | nindent 6 }}
      {{- end }}
