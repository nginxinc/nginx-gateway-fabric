apiVersion: v1
kind: Namespace
metadata:
  name: nginx-gateway
---
apiVersion: v1
imagePullSecrets:
- name: nginx-plus-registry-secret
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: nginx-gateway
    app.kubernetes.io/name: nginx-gateway
    app.kubernetes.io/version: edge
  name: nginx-gateway
  namespace: nginx-gateway
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: nginx-gateway
    app.kubernetes.io/name: nginx-gateway
    app.kubernetes.io/version: edge
  name: nginx-gateway
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - secrets
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses
  - gateways
  - httproutes
  - referencegrants
  - grpcroutes
  verbs:
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - httproutes/status
  - gateways/status
  - gatewayclasses/status
  - grpcroutes/status
  verbs:
  - update
- apiGroups:
  - gateway.nginx.org
  resources:
  - nginxgateways
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.nginx.org
  resources:
  - nginxproxies
  - clientsettingspolicies
  - observabilitypolicies
  - upstreamsettingspolicies
  - snippetsfilters
  verbs:
  - list
  - watch
- apiGroups:
  - gateway.nginx.org
  resources:
  - nginxgateways/status
  - clientsettingspolicies/status
  - observabilitypolicies/status
  - upstreamsettingspolicies/status
  - snippetsfilters/status
  verbs:
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: nginx-gateway
    app.kubernetes.io/name: nginx-gateway
    app.kubernetes.io/version: edge
  name: nginx-gateway
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nginx-gateway
subjects:
- kind: ServiceAccount
  name: nginx-gateway
  namespace: nginx-gateway
---
apiVersion: v1
data:
  nginx-agent.conf: |-
    command:
      server:
        host: nginx-gateway.nginx-gateway.svc
        port: 443
    allowed_directories:
    - /etc/nginx
    - /usr/share/nginx
    - /var/run/nginx
    features:
    - connection
    - configuration
    - certificates
    - metrics
    - api-action
    log:
      level: debug
    collector:
      receivers:
        host_metrics:
          collection_interval: 1m0s
          initial_delay: 1s
          scrapers:
            cpu: {}
            memory: {}
            disk: {}
            network: {}
            filesystem: {}
      processors:
        batch: {}
      exporters:
        prometheus_exporter:
          server:
            host: "0.0.0.0"
            port: 9113
kind: ConfigMap
metadata:
  name: nginx-agent-config
  namespace: nginx-gateway
---
apiVersion: v1
data:
  main.conf: |
    error_log stderr info;
  mgmt.conf: |
    mgmt {
        enforce_initial_report off;
        deployment_context /etc/nginx/main-includes/deployment_ctx.json;
    }
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: nginx-gateway
    app.kubernetes.io/name: nginx-gateway
    app.kubernetes.io/version: edge
  name: nginx-includes-bootstrap
  namespace: nginx-gateway
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: nginx-gateway
    app.kubernetes.io/name: nginx-gateway
    app.kubernetes.io/version: edge
  name: nginx-gateway
  namespace: nginx-gateway
spec:
  ports:
  - name: agent-grpc
    port: 443
    protocol: TCP
    targetPort: 8443
  selector:
    app.kubernetes.io/instance: nginx-gateway
    app.kubernetes.io/name: nginx-gateway
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: nginx-gateway
    app.kubernetes.io/name: nginx-gateway
    app.kubernetes.io/version: edge
  name: tmp-nginx-deployment
  namespace: nginx-gateway
spec:
  externalTrafficPolicy: Local
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  - name: https
    port: 443
    protocol: TCP
    targetPort: 443
  selector:
    app.kubernetes.io/instance: nginx-gateway
    app.kubernetes.io/name: tmp-nginx-deployment
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: nginx-gateway
    app.kubernetes.io/name: nginx-gateway
    app.kubernetes.io/version: edge
  name: nginx-gateway
  namespace: nginx-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: nginx-gateway
      app.kubernetes.io/name: nginx-gateway
  template:
    metadata:
      annotations:
        prometheus.io/port: "9113"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/instance: nginx-gateway
        app.kubernetes.io/name: nginx-gateway
    spec:
      containers:
      - args:
        - static-mode
        - --gateway-ctlr-name=gateway.nginx.org/nginx-gateway-controller
        - --gatewayclass=nginx
        - --config=nginx-gateway-config
        - --service=nginx-gateway
        - --nginx-plus
        - --usage-report-secret=nplus-license
        - --metrics-port=9113
        - --health-port=8081
        - --leader-election-lock-name=nginx-gateway-leader-election
        - --snippets-filters
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        image: ghcr.io/nginxinc/nginx-gateway-fabric:edge
        imagePullPolicy: Always
        name: nginx-gateway
        ports:
        - containerPort: 8443
          name: agent-grpc
        - containerPort: 9113
          name: metrics
        - containerPort: 8081
          name: health
        readinessProbe:
          httpGet:
            path: /readyz
            port: health
          initialDelaySeconds: 3
          periodSeconds: 1
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1001
          runAsUser: 101
          seccompProfile:
            type: RuntimeDefault
      securityContext:
        fsGroup: 1001
        runAsNonRoot: true
      serviceAccountName: nginx-gateway
      terminationGracePeriodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tmp-nginx-deployment
  namespace: nginx-gateway
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: nginx-gateway
      app.kubernetes.io/name: tmp-nginx-deployment
  template:
    metadata:
      annotations:
        prometheus.io/port: "9113"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/instance: nginx-gateway
        app.kubernetes.io/name: tmp-nginx-deployment
    spec:
      containers:
      - image: private-registry.nginx.com/nginx-gateway-fabric/nginx-plus:edge
        imagePullPolicy: Always
        name: nginx
        ports:
        - containerPort: 80
          name: http
        - containerPort: 443
          name: https
        - containerPort: 9113
          name: metrics
        securityContext:
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1001
          runAsUser: 101
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /etc/nginx-agent
          name: nginx-agent
        - mountPath: /var/log/nginx-agent
          name: nginx-agent-log
        - mountPath: /etc/nginx/conf.d
          name: nginx-conf
        - mountPath: /etc/nginx/stream-conf.d
          name: nginx-stream-conf
        - mountPath: /etc/nginx/main-includes
          name: nginx-main-includes
        - mountPath: /etc/nginx/secrets
          name: nginx-secrets
        - mountPath: /var/run/nginx
          name: nginx-run
        - mountPath: /var/cache/nginx
          name: nginx-cache
        - mountPath: /etc/nginx/includes
          name: nginx-includes
        - mountPath: /var/lib/nginx/state
          name: nginx-lib
        - mountPath: /etc/nginx/license.jwt
          name: nginx-plus-license
          subPath: license.jwt
      initContainers:
      - command:
        - /usr/bin/gateway
        - initialize
        - --source
        - /agent/nginx-agent.conf
        - --destination
        - /etc/nginx-agent
        - --source
        - /includes/main.conf
        - --destination
        - /etc/nginx/main-includes
        - --source
        - /includes/mgmt.conf
        - --nginx-plus
        - --destination
        - /etc/nginx/main-includes
        env:
        - name: POD_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        image: ghcr.io/nginxinc/nginx-gateway-fabric:edge
        imagePullPolicy: Always
        name: init
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1001
          runAsUser: 101
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /agent
          name: nginx-agent-config
        - mountPath: /etc/nginx-agent
          name: nginx-agent
        - mountPath: /includes
          name: nginx-includes-bootstrap
        - mountPath: /etc/nginx/main-includes
          name: nginx-main-includes
      securityContext:
        fsGroup: 1001
        runAsNonRoot: true
      serviceAccountName: nginx-gateway
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: nginx-agent
      - configMap:
          name: nginx-agent-config
        name: nginx-agent-config
      - emptyDir: {}
        name: nginx-agent-log
      - emptyDir: {}
        name: nginx-conf
      - emptyDir: {}
        name: nginx-stream-conf
      - emptyDir: {}
        name: nginx-main-includes
      - emptyDir: {}
        name: nginx-secrets
      - emptyDir: {}
        name: nginx-run
      - emptyDir: {}
        name: nginx-cache
      - emptyDir: {}
        name: nginx-includes
      - configMap:
          name: nginx-includes-bootstrap
        name: nginx-includes-bootstrap
      - emptyDir: {}
        name: nginx-lib
      - name: nginx-plus-license
        secret:
          secretName: nplus-license
---
apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass
metadata:
  labels:
    app.kubernetes.io/instance: nginx-gateway
    app.kubernetes.io/name: nginx-gateway
    app.kubernetes.io/version: edge
  name: nginx
spec:
  controllerName: gateway.nginx.org/nginx-gateway-controller
---
apiVersion: gateway.nginx.org/v1alpha1
kind: NginxGateway
metadata:
  labels:
    app.kubernetes.io/instance: nginx-gateway
    app.kubernetes.io/name: nginx-gateway
    app.kubernetes.io/version: edge
  name: nginx-gateway-config
  namespace: nginx-gateway
spec:
  logging:
    level: info
